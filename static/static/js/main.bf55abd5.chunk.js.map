{"version":3,"sources":["api/api.js","redux/settingsReducer.js","redux/historyReducer.js","redux/detailsReducer.js","redux/root-reducer.js","redux/store.js","components/Button/Button.js","components/Header/Header.js","components/Footer/Footer.js","components/Loader/Loader.js","components/Start/Start.js","components/Input/Input.js","components/Settings/Settings.js","components/Card/Card.js","components/PopUp/PopUp.js","components/History/History.js","components/Details/Details.js","components/App/App.js","index.js"],"names":["axios","ax","create","baseURL","timeout","api","get","then","res","catch","err","console","log","data","params","limit","buildId","post","commitHash","commitMessage","branchName","authorName","repoName","buildCommand","mainBranch","period","Number","initialState","isLoad","isCloning","cloningWithError","loadSettings","status","type","payload","cloningRepo","errorWithCloning","getConfigThunk","history","dispatch","response","push","isLoading","buildList","runNewBuild","errorPostReq","loading","getRepoName","addBuildInQueue","errorOnRequestNewBuild","initianState","buildInfo","rebuildInfo","logs","getLogs","combineReducers","settings","state","action","details","middleWares","thunk","store","createStore","rootReducer","applyMiddleware","Button","src","text","textWithIcon","header","accent","disabled","onClick","buttonClass","classNames","className","alt","Header","button","title","onClick2","redirectHistory","headerClass","headerTitleClass","Footer","Loader","StartConnect","withRouter","connect","useEffect","handleRedirectSettings","Input","labelText","name","require","value","onChange","placeholder","paragraph","htmlFor","id","required","SettingsConnect","postSaveSettings","useState","formValues","setFormValues","handleChange","event","target","prev","handleResetField","preventDefault","mask","guide","test","length","goBack","Card","buildNumber","start","duration","informClass","atributeClass","cardDateClass","cardDayContClass","cardDayClass","cardNumberClass","cardIconClass","shortCommitHash","slice","data-hash","format","Date","locale","ru","replace","PopUp","onClickRunBuild","closePopUp","found","HistoryConnect","allBuildList","getBuildListThunk","actionGetBuilds","postNewBuildQueue","toggle","setToggle","showLimit","setShowLitim","hash","formValue","setFormValue","handleDetails","dataset","currentTarget","mapCardTopData","map","key","DetailsConnect","getDetailsBuild","getInfo","postBuildInQueue","getRebuildInfo","match","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf55abd5.chunk.js","sourcesContent":["import ax from 'axios';\r\n\r\nconst axios = ax.create({\r\n  baseURL: 'http://localhost:3000/api',\r\n  timeout: 5000,\r\n});\r\n\r\nexport const api = {\r\n  getConfig() {\r\n    return axios.get('/settings')\r\n      .then(res => res)\r\n      .catch(err => console.log(err));\r\n  },\r\n\r\n  getBuildsList(data) {\r\n    return axios.get('/builds', {\r\n      params: {\r\n        limit: data\r\n      }\r\n    })\r\n      .then(res => res)\r\n      .catch(err => console.log(err));\r\n  },\r\n\r\n  getDetailsBuild(buildId) {\r\n    return axios.get(`/builds/${buildId}`)\r\n      .then(res => res)\r\n      .catch(err => console.log(err));\r\n  },\r\n\r\n  postAddQueue(data) {\r\n    return axios.post(`/builds/${data.commitHash}`, {\r\n      commitMessage: data.commitMessage,\r\n      branchName: data.branchName,\r\n      authorName: data.authorName\r\n    })\r\n      .then(res => res)\r\n      .catch(err => err);\r\n  },\r\n\r\n  getLogs(buildId) {\r\n    return axios.get(`/builds/${buildId}/logs`)\r\n      .then(res => res)\r\n      .catch(err => console.log(err));\r\n  },\r\n\r\n  postSaveSettings(data) {\r\n\r\n    return axios.post('/settings', {\r\n      repoName: data.repoName,\r\n      buildCommand: data.buildCommand,\r\n      mainBranch: data.mainBranch,\r\n      period: Number(data.period)\r\n    })\r\n      .then(res => res)\r\n      .catch(err => console.log(err));\r\n  }\r\n}\r\n","import { api } from '../api/api';\r\n\r\nconst initialState = {\r\n  repoName: '',\r\n  buildCommand: 'npm ci && npm run build',\r\n  mainBranch: 'master',\r\n  period: '',\r\n  isLoad: false,\r\n  isCloning: false,\r\n  cloningWithError: false,\r\n}\r\n\r\nexport function settingsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'GET_CONFIG':\r\n      return { ...state, ...action.payload };\r\n    case 'LOAD':\r\n      return { ...state, isLoad: action.payload };\r\n    case 'CLONING':\r\n      return { ...state, isCloning: action.payload };\r\n    case 'ERROR_CLONING':\r\n      return { ...state, cloningWithError: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst addConfig = (data) => ({\r\n  type: 'GET_CONFIG',\r\n  payload: data\r\n});\r\n\r\nconst loadSettings = (status) => ({\r\n  type: 'LOAD',\r\n  payload: status\r\n});\r\n\r\nconst cloningRepo = (status) => ({\r\n  type: 'CLONING',\r\n  payload: status\r\n});\r\n\r\nconst errorWithCloning = (status) => ({\r\n  type: 'ERROR_CLONING',\r\n  payload: status\r\n});\r\n\r\nexport const getConfigThunk = (history) => (dispatch) => {\r\n  dispatch(loadSettings(true));\r\n  api.getConfig()\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        history.push('/history');\r\n        dispatch(loadSettings(false));\r\n        dispatch(addConfig(response.data));\r\n      } else {\r\n        history.push('/');\r\n        dispatch(loadSettings(false));\r\n      }\r\n    }).catch(err => console.log(err));\r\n}\r\n\r\nexport const postSaveSettings = (data, history) => (dispatch) => {\r\n  dispatch(cloningRepo(true));\r\n  api.postSaveSettings(data)\r\n    .then(res => {\r\n      console.log(res)\r\n      if (res.status !== 200) {\r\n        dispatch(errorWithCloning(true));\r\n        dispatch(cloningRepo(false));\r\n      } else {\r\n        dispatch(cloningRepo(false));\r\n        history.push('/history');\r\n      }\r\n    }).catch(err => {\r\n      dispatch(cloningRepo(false));\r\n      dispatch(errorWithCloning(true));\r\n      console.log(err);\r\n    });\r\n}\r\n","import { api } from '../api/api';\r\nconst initialState = {\r\n  isLoading: false,\r\n  buildList: [],\r\n  repoName: '',\r\n  runNewBuild: false,\r\n  errorPostReq: false\r\n}\r\n\r\nexport function historyReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'GET_BUILD_LIST':\r\n      return { ...state, buildList: [...action.payload] };\r\n    case 'LOAD_TOGGLE':\r\n      return { ...state, isLoading: action.payload };\r\n    case 'GET_REPONAME':\r\n      return { ...state, repoName: action.payload };\r\n    case 'RUN_NEW_BUILD':\r\n      return { ...state, runNewBuild: action.payload };\r\n    case 'ERROR_POST_REQ':\r\n      return { ...state, errorPostReq: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actionGetBuilds = (data) => ({\r\n  type: 'GET_BUILD_LIST',\r\n  payload: data\r\n});\r\n\r\nconst loading = (data) => ({\r\n  type: 'LOAD_TOGGLE',\r\n  payload: data\r\n});\r\n\r\nconst getRepoName = (data) => ({\r\n  type: 'GET_REPONAME',\r\n  payload: data\r\n});\r\n\r\nconst addBuildInQueue = (status) => ({\r\n  type: 'RUN_NEW_BUILD',\r\n  payload: status\r\n});\r\n\r\nconst errorOnRequestNewBuild = (data) => ({\r\n  type: 'ERROR_POST_REQ',\r\n  payload: data\r\n});\r\n\r\nexport const getBuildListThunk = (data) => (dispatch) => {\r\n  dispatch(loading(true));\r\n  api.getBuildsList(data)\r\n    .then(res => {\r\n      dispatch(actionGetBuilds(res.data));\r\n      dispatch(loading(false));\r\n    }).catch(err => console.log(err));\r\n\r\n\r\n  api.getConfig()\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        dispatch(getRepoName(res.data.repoName));\r\n      } else {\r\n        dispatch(getRepoName('No settings in the config'));\r\n      }\r\n    }).catch(err => console.log(err));\r\n}\r\n\r\nexport const postNewBuildQueue = (data, history) => (dispatch) => {\r\n  dispatch(addBuildInQueue(true));\r\n  api.postAddQueue(data)\r\n    .then(res => {\r\n      if (res.data.id) {\r\n        history.push(`/build/${res.data.id}`);\r\n        dispatch(addBuildInQueue(false));\r\n      } else {\r\n        dispatch(errorOnRequestNewBuild(true));\r\n        dispatch(addBuildInQueue(false));\r\n      }\r\n    }).catch(err => {\r\n      dispatch(errorOnRequestNewBuild(true));\r\n      dispatch(addBuildInQueue(false));\r\n      console.log(err);\r\n    });\r\n}\r\n","import { api } from '../api/api';\r\nconst initianState = {\r\n  isLoading: false,\r\n  repoName: '',\r\n  buildInfo: {},\r\n  rebuildInfo: {},\r\n  logs: ''\r\n};\r\n\r\nexport function detailsReducer(state = initianState, action) {\r\n  switch (action.type) {\r\n    case 'GET_BUILD_INFO':\r\n      return { ...state, buildInfo: { ...action.payload } };\r\n    case 'LOAD_TOGGLE':\r\n      return { ...state, isLoading: action.payload };\r\n    case 'GET_REPONAME':\r\n      return { ...state, repoName: action.payload };\r\n    case 'GET_REBUILD_INFO':\r\n      return { ...state, rebuildInfo: { ...action.payload } };\r\n    case 'GET_LOGS':\r\n      return { ...state, logs: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst loading = (data) => ({\r\n  type: 'LOAD_TOGGLE',\r\n  payload: data\r\n});\r\n\r\nconst getInfo = (data) => ({\r\n  type: 'GET_BUILD_INFO',\r\n  payload: data\r\n});\r\n\r\nconst getRepoName = (data) => ({\r\n  type: 'GET_REPONAME',\r\n  payload: data\r\n});\r\n\r\nconst getRebuildInfo = (data) => ({\r\n  type: 'GET_REBUILD_INFO',\r\n  payload: data\r\n});\r\n\r\nconst getLogs = (data) => ({\r\n  type: 'GET_LOGS',\r\n  payload: data\r\n});\r\n\r\nexport const getDetailsBuild = (data, history) => (dispatch) => {\r\n  dispatch(loading(true));\r\n  api.getDetailsBuild(data)\r\n    .then(res => {\r\n      dispatch(getInfo(res.data));\r\n\r\n      if (res.data.status === 'Success') {\r\n        return api.getLogs(res.data.id)\r\n          .then(res => {\r\n            dispatch(getLogs(res.data));\r\n            dispatch(loading(false));\r\n          }).catch(err => console.log(err));\r\n      }\r\n      dispatch(getLogs(''));\r\n      dispatch(loading(false));\r\n    }).catch(err => {\r\n      dispatch(loading(false));\r\n      console.log(err);\r\n    });\r\n\r\n  api.getConfig()\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        dispatch(getRepoName(res.data.repoName));\r\n      } else {\r\n        history.push('/history');\r\n        dispatch(getRepoName('No settings in the config'));\r\n      }\r\n    }).catch(err => console.log(err));\r\n}\r\n\r\nexport const postBuildInQueue = (data, history) => (dispatch) => {\r\n  dispatch(loading(true));\r\n  api.postAddQueue(data)\r\n    .then(res => {\r\n      console.log(res)\r\n      dispatch(getRebuildInfo(res.data));\r\n      history.push(`${res.data.id}`);\r\n      dispatch(loading(false));\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      dispatch(loading(false));\r\n    });\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { settingsReducer } from './settingsReducer';\r\nimport { historyReducer } from './historyReducer';\r\nimport { detailsReducer } from './detailsReducer';\r\n\r\nexport default combineReducers({\r\n  settings: settingsReducer,\r\n  history: historyReducer,\r\n  details: detailsReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middleWares = [thunk];\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Button.scss';\r\n\r\nexport function Button({ src, text, textWithIcon, header, accent, settings, history, disabled, onClick }) {\r\n\r\n  const buttonClass = classNames({\r\n    'button__header': header,\r\n    'button_accent': accent,\r\n    'button__settings': settings,\r\n    'header__button_history': history\r\n  }, 'button');\r\n  return (\r\n    <button onClick={onClick} className={buttonClass} disabled={disabled}>\r\n      {src && <img className='button__icon' src={src} alt=\"gear\" disabled={disabled} />}\r\n      {!text && !history ? <span className=\"button__text\" disabled={disabled}>{textWithIcon}</span> : text}\r\n    </button>\r\n  );\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Header.scss';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport function Header({ settings, button, history, title, details, onClick, onClick2, redirectHistory }) {\r\n  const headerClass = classNames({\r\n    'header_settings': settings,\r\n    'header__content': !settings,\r\n    'header__history-indent': history,\r\n  }, 'header', 'content');\r\n\r\n  const headerTitleClass = classNames('header__title', {\r\n    'header__title_history': history,\r\n    'header_details': details\r\n  });\r\n\r\n  return (\r\n    <header className={headerClass}>\r\n      <h1 className={headerTitleClass} onClick={redirectHistory}>{title}</h1>\r\n      {history ?\r\n        <div className='header__button-wrapper'>\r\n          {details ? <Button src='/images/rebuild.svg' textWithIcon='Rebuild' header onClick={onClick} /> : <Button onClick={onClick} src='/images/play.svg' textWithIcon='Run build' header />}\r\n          <Button onClick={onClick2} src='/images/gear.svg' header history />\r\n        </div>\r\n        : button && <Button onClick={onClick} src='/images/gear.svg' textWithIcon='Settings' header />}\r\n    </header>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nexport function Footer() {\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='content footer__content'>\r\n        <ul className=\"footer__link-list\">\r\n          <li className=\"footer__link\">Support</li>\r\n          <li className=\"footer__link\">Learning</li>\r\n        </ul>\r\n        <p className=\"footer__copyright\">&copy; 2020 Andrey Pogorelov</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n}","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport function Loader() {\r\n  return (\r\n    <img className='loader' src='/images/loader.svg' alt='loader' />\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport './Start.scss';\r\nimport { Header } from '../Header/Header';\r\nimport { Button } from '../Button/Button';\r\nimport { Footer } from '../Footer/Footer';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { getConfigThunk } from '../../redux/settingsReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nfunction Start({ getConfigThunk, history, settings }) {\r\n  useEffect(() => getConfigThunk(history), [getConfigThunk, history]);\r\n\r\n  const handleRedirectSettings = () => {\r\n    history.push('/settings');\r\n  }\r\n  return (\r\n    <>\r\n      <div className='start'>\r\n        <Header button title='School CI server' onClick={handleRedirectSettings} />\r\n        {settings.isLoad ? <Loader /> :\r\n          <div className='settings-info content'>\r\n            <img className=\"settings-info__img\" src=\"images/settingslogo.svg\" alt=\"key and screw\" />\r\n            <p className=\"settings-info__text\">\r\n              Configure repository connection\r\n              and synchronization settings\r\n            </p>\r\n            <Button text='Open settings' accent onClick={handleRedirectSettings} />\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = ({ settings }) => ({\r\n  settings\r\n});\r\nexport const StartConnect = withRouter(connect(mapStateToProps, { getConfigThunk })(Start))","import React from 'react';\r\nimport classNames  from 'classnames';\r\nimport './Input.scss';\r\n\r\n\r\nexport function Input({ labelText, name, require, value, onChange, placeholder, onClick }) {\r\n  const paragraph = classNames('settings__paragraph', {\r\n    'settings__require': require\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <label className={paragraph} htmlFor={name}>{labelText}</label>\r\n      <div className=\"input\">\r\n        <input className=\"input__field\" id={name} type=\"text\" placeholder={placeholder} value={value} onChange={onChange} name={name} required={require}/>\r\n        <button className=\"input__field-cancel\"  name={name} onClick={onClick} />\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport MaskedInput from 'react-text-mask'\r\nimport './Settings.scss';\r\nimport { Header } from '../Header/Header';\r\nimport { Footer } from '../Footer/Footer';\r\nimport { Input } from '../Input/Input';\r\nimport { Button } from '../Button/Button';\r\nimport { postSaveSettings } from '../../redux/settingsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst initialState = {\r\n  repoName: '',\r\n  buildCommand: 'npm ci && npm run build',\r\n  mainBranch: 'master',\r\n  period: ''\r\n}\r\nfunction Settings({ history, postSaveSettings, isCloning, cloningWithError }) {\r\n  const [formValues, setFormValues] = useState(initialState);\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    console.log(formValues.period)\r\n    setFormValues((prev) => ({ ...prev, [name]: value }));\r\n  }\r\n\r\n  const handleResetField = event => {\r\n    event.preventDefault();\r\n    const { name } = event.target;\r\n    setFormValues((prev) => ({ ...prev, [name]: '' }));\r\n  }\r\n\r\n  const handleCancel = event => {\r\n    event.preventDefault();\r\n    history.goBack();\r\n  }\r\n  const handleSaveSettings = event => {\r\n    event.preventDefault();\r\n    if (/(.)\\/(.)/g.test(formValues.repoName) && formValues.buildCommand.length > 5 && formValues.period.length > 0) {\r\n      postSaveSettings(formValues, history);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='settings'>\r\n        <Header settings title='School CI server' text='test' />\r\n        <div className='content'>\r\n          <h2 className=\"settings__title\">Settings</h2>\r\n          <p className=\"settings__subtitle\">Configure repository connection and synchronization settings.</p>\r\n          <form className='settings__form'>\r\n            <Input labelText='GitHub repository' name='repoName' placeholder='user-name/repo-name' require onChange={handleChange} value={formValues.repoName} onClick={handleResetField} />\r\n            <Input labelText='Build command' name='buildCommand' placeholder='build command' require onChange={handleChange} value={formValues.buildCommand} onClick={handleResetField} />\r\n            <Input labelText='Main branch' name='mainBranch' placeholder='branch' onChange={handleChange} value={formValues.mainBranch} onClick={handleResetField} />\r\n            {cloningWithError && <span className='settings__fail'>fail clone repository</span>}\r\n            <div className=\"settings__time-wrapper\">\r\n              <p className=\"settings__paragraph\">Synchronize every</p>\r\n              <MaskedInput className=\"input__field input__field_time\" name='period' onChange={handleChange} value={formValues.period} mask={[/\\d/, /\\d/]} guide={false} />\r\n              <p className=\"settings__paragraph\">minutes</p>\r\n            </div>\r\n            <div className=\"settings__button-wrapper\">\r\n              <Button accent text='Save' settings onClick={handleSaveSettings} disabled={isCloning} />\r\n              <Button text='Cancel' disabled={isCloning} onClick={handleCancel} />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ settings }) => ({\r\n  isCloning: settings.isCloning,\r\n  cloningWithError: settings.cloningWithError\r\n});\r\n\r\nexport const SettingsConnect = withRouter(connect(mapStateToProps, { postSaveSettings })(Settings));\r\n","import React from 'react';\r\nimport { format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale'\r\nimport './Card.scss';\r\nimport classNames from 'classnames';\r\n\r\nexport function Card({ details, id, buildNumber, commitMessage, commitHash = '', branchName, authorName, status, start, duration, onClick }) {\r\n\r\n  const informClass = classNames('card__information', {\r\n    'details__card': details\r\n  });\r\n\r\n  const atributeClass = classNames('card__atributes', {\r\n    'details__atributes': details\r\n  });\r\n\r\n  const cardDateClass = classNames('card__date', {\r\n    'details__date': details\r\n  });\r\n\r\n  const cardDayContClass = classNames('card__day-container', {\r\n    'details__day-container': details\r\n  });\r\n\r\n  const cardDayClass = classNames('card__day', {\r\n    'details__day': details\r\n  });\r\n\r\n  const cardNumberClass = classNames('card__number-ticket', {\r\n    'card__number-ticket_good': status === 'Success',\r\n    'card__number-ticket_queue': status === 'Waiting' || status === 'InProgress',\r\n    'card__number-ticket_reject': status === 'Fail' || status === 'Canceled'\r\n  });\r\n\r\n  const cardIconClass = classNames('card__icon-pr', {\r\n    'card__icon-pr_good': status === 'Success',\r\n    'card__icon-pr_queue': status === 'Waiting' || status === 'InProgress',\r\n    'card__icon-pr_reject': status === 'Fail' || status === 'Canceled'\r\n  })\r\n\r\n  const shortCommitHash = commitHash.slice(0, 6)\r\n  return (\r\n    <div data-hash={id} onClick={onClick} className=\"card\">\r\n      <div className=\"card__discription\">\r\n        <div className={cardIconClass} />\r\n        <div className={informClass}>\r\n          <div className=\"card__content-wrapper\">\r\n            <div className=\"card__title-wrapper\">\r\n              <p className={cardNumberClass}>{`#${buildNumber}`}</p>\r\n              <h3 className=\"card__title\">{commitMessage}</h3>\r\n            </div>\r\n            <div className={atributeClass}>\r\n              <div className=\"card__git-info\">\r\n                <img className=\"card__icon-atribute\" src=\"/images/commit.svg\" alt=\"commit icon\" />\r\n                <p className=\"card__branch\">{branchName}</p>\r\n                <p className=\"card__commit\">{shortCommitHash}</p>\r\n              </div>\r\n              <div className=\"card__author-container\">\r\n                <img className=\"card__icon-atribute\" src=\"/images/user.svg\" alt=\"use icon\" />\r\n                <p className=\"card__author\">{authorName}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={cardDateClass}>\r\n            <div className={cardDayContClass}>\r\n              <img className=\"card__icon-atribute\" src=\"/images/calendar.svg\" alt=\"calendar icon\" />\r\n              <p className={cardDayClass}>{start && format(new Date(start), 'd MMM HH:mm', { locale: ru }).replace('.', ',')}</p>\r\n            </div>\r\n            <div className=\"card__time-container\">\r\n              <img className=\"card__icon-atribute\" src=\"/images/time.svg\" alt=\"time icon\" />\r\n              <p className=\"card__time\">{duration && `${duration / 60 ^ 0} ч ${duration % 60} мин`}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './PopUp.scss';\r\nimport { Input } from '../Input/Input';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport function PopUp({ onChange, name, value, onClick, onClickRunBuild, closePopUp, disabled, found }) {\r\n  return (\r\n    <div className='popup'>\r\n      <div className='popup__wrapper'>\r\n        <form className='popup__form'>\r\n          <h3 className='popup__title'>New build</h3>\r\n          <p className='popup__description'>Enter the commit hash which you want to build.</p>\r\n          <Input placeholder='Commit hash' onClick={onClick} onChange={onChange} name={name} value={value} />\r\n          <div className='popup__button-wrapper'>\r\n            <Button accent text='Run build' settings onClick={onClickRunBuild} disabled={disabled} />\r\n            <Button text='Cancel' onClick={closePopUp} />\r\n            {found && <span className='popup__err'>Commit not found</span>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './History.scss';\r\nimport { Header } from '../Header/Header';\r\nimport { Card } from '../Card/Card';\r\nimport { Footer } from '../Footer/Footer';\r\nimport { PopUp } from '../PopUp/PopUp';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { getBuildListThunk, postNewBuildQueue } from '../../redux/historyReducer';\r\nimport { getConfigThunk } from '../../redux/settingsReducer';\r\n\r\nfunction History({ getBuildListThunk, postNewBuildQueue, isLoading, buildList, repoName, history, runNewBuild, errorPostReq, getConfigThunk }) {\r\n  const [toggle, setToggle] = useState(false);\r\n  const [showLimit, setShowLitim] = useState({\r\n    limit: 10\r\n  });\r\n\r\n  const [formValue, setFormValue] = useState({\r\n    hash: ''\r\n  });\r\n  useEffect(() => {\r\n    getConfigThunk(history)\r\n  }, [getConfigThunk, history]);\r\n\r\n  useEffect(() => {\r\n    getBuildListThunk(showLimit.limit);\r\n  }, [getBuildListThunk, showLimit.limit]);\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.currentTarget;\r\n    setFormValue(state => ({ ...state, [name]: value }));\r\n  }\r\n\r\n  const handleReset = event => {\r\n    const { name } = event.currentTarget;\r\n    event.preventDefault();\r\n    setFormValue(({ [name]: '' }));\r\n  }\r\n\r\n\r\n  const handleClickRunBuild = () => {\r\n    setToggle(true);\r\n  }\r\n\r\n  const handleCloseRunBuild = () => {\r\n    setToggle(false);\r\n    setFormValue(({ hash: '' }));\r\n  }\r\n  const handleRedirect = () => {\r\n    history.push('/settings')\r\n  }\r\n\r\n  \r\n\r\n  const handleDetails = event => {\r\n    const { dataset } = event.currentTarget;\r\n    history.push(`build/${dataset.hash}`);\r\n  }\r\n\r\n  const handleShowMore = () => {\r\n    const stepShow = 5;\r\n    setShowLitim((state) => ({ ...state, limit: state.limit + stepShow }));\r\n  }\r\n\r\n  const handleRunBuild = (event) => {\r\n    event.preventDefault();\r\n    postNewBuildQueue({\r\n      commitHash: formValue.hash,\r\n    }, history);\r\n  }\r\n\r\n\r\n  const mapCardTopData = buildList.map(({ id, buildNumber, commitMessage, commitHash, branchName, authorName, status, start, duration }) => {\r\n    return <Card key={id} id={id} buildNumber={buildNumber} commitMessage={commitMessage}\r\n      commitHash={commitHash} branchName={branchName} authorName={authorName} status={status} start={start} duration={duration} onClick={handleDetails}\r\n    />\r\n  });\r\n  return (\r\n    <>\r\n      <div className='history'>\r\n        <Header button history title={repoName} onClick={handleClickRunBuild} onClick2={handleRedirect} />\r\n        {isLoading ? <Loader /> :\r\n          <div className='content'>\r\n            <div className='history__list'>\r\n              {mapCardTopData}\r\n            </div>\r\n            <button className=\"button history__button\" onClick={handleShowMore}>Show more</button>\r\n          </div>\r\n        }\r\n        {toggle ? <PopUp found={errorPostReq} onChange={handleChange} onClick={handleReset} name={'hash'} value={formValue.hash} onClickRunBuild={handleRunBuild} closePopUp={handleCloseRunBuild} disabled={runNewBuild} /> : null}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = ({ history }) => ({\r\n  isLoading: history.isLoading,\r\n  buildList: history.buildList,\r\n  repoName: history.repoName,\r\n  runNewBuild: history.runNewBuild,\r\n  allBuildList: history.allBuildList,\r\n  errorPostReq: history.errorPostReq\r\n});\r\n\r\nexport const HistoryConnect = connect(mapStateToProps, { getBuildListThunk, postNewBuildQueue, getConfigThunk })(History);\r\n","import React, { useEffect } from 'react';\r\nimport './Details.scss';\r\nimport { Header } from '../Header/Header';\r\nimport { Footer } from '../Footer/Footer';\r\nimport { Card } from '../Card/Card';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { getDetailsBuild, postBuildInQueue } from '../../redux/detailsReducer';\r\n\r\nfunction Details({ match, history, getDetailsBuild, postBuildInQueue, buildInfo, repoName, isLoading, logs }) {\r\n\r\n  useEffect(() => {\r\n    getDetailsBuild(match.params.id, history);\r\n  }, [getDetailsBuild, match.params.id, history]);\r\n\r\n  const { id, buildNumber = 0, commitMessage = 'build not found', commitHash, branchName, authorName, status, start, duration } = buildInfo;\r\n\r\n  const HandleredirectSettings = () => {\r\n    history.push('/settings');\r\n  }\r\n\r\n  const handleRedirectHistory = () => {\r\n    history.push('/history');\r\n  }\r\n\r\n  const handleRebuild = () => {\r\n    postBuildInQueue({\r\n      commitHash\r\n    }, history);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='details'>\r\n        <Header button history details title={repoName} onClick={handleRebuild} onClick2={HandleredirectSettings} redirectHistory={handleRedirectHistory} />\r\n        {isLoading ? <Loader /> :\r\n          <div className='content'>\r\n            <Card details id={id} buildNumber={buildNumber} commitMessage={commitMessage}\r\n              commitHash={commitHash} branchName={branchName} authorName={authorName} status={status} start={start} duration={duration} />\r\n            {logs &&\r\n              <div className=\"details__log\">\r\n                <pre>{logs}</pre>\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ details }) => ({\r\n  isLoading: details.isLoading,\r\n  repoName: details.repoName,\r\n  buildInfo: details.buildInfo,\r\n  logs: details.logs\r\n});\r\nexport const DetailsConnect = connect(mapStateToProps, { getDetailsBuild, postBuildInQueue })(Details);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../../redux/store';\r\nimport './App.scss';\r\nimport { StartConnect } from '../Start/Start';\r\nimport { SettingsConnect } from '../Settings/Settings';\r\nimport { HistoryConnect } from '../History/History';\r\nimport { DetailsConnect } from '../Details/Details';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path='/' exact component={StartConnect} />\r\n            <Route path='/settings' exact component={SettingsConnect} />\r\n            <Route path='/history' exact component={HistoryConnect} />\r\n            <Route path='/build/:id' component={DetailsConnect} />\r\n          </Switch>\r\n        </div>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}